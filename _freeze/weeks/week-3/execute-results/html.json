{
  "hash": "de71c69c73252cb26fe6943a5577efdb",
  "result": {
    "markdown": "---\ntitle: \"Week Three: Incorporating Categorical Variables\"\nformat: \n  html: \n    theme: minty\n    fontsize: 1em\n    mainfont: sans-serif\n    number-sections: true\n    number-depth: 2\n    code-block-bg: \"#76b5c5\"\n    highlight-style: monochrome\n    embed-resources: true\n    standalone: true\neditor: visual\n---\n\n\n\n\nWelcome!\n\nIn this week's coursework we are going to dive deeper into exploring data, by incorporating categorical variables. Specifically, we will explore how we can incorporate categorical variables into our visualizations through the use of colors and facets. We will also explore how we can obtain summary statistics for different groups of a categorical variable, making our summaries more specific.\n\n## Learning Outcomes\n\nBy the end of this coursework you should be able to:\n\n-   describe what a categorical variable is and how these types of variables are stored in `R`\n-   determine whether a variable in a dataset is categorical\n-   incorporate categorical variables into visualizations of two and three variables\n-   obtain summary statistics for each level of a categorical variable\n\n# Prepare\n\n## Reading Guide -- One Reading Guide for Both Readings!\n\n[Download the Word Document](reading-guide/week3-reading.docx)\n\n::: callout-caution\n# Answers\n\n**Please include your answers as a different color!** You can pick whatever color you like, but please use a color other than black.\n:::\n\n## Textbook Reading -- Part 1\n\n::: column-margin\n\n::: {.cell}\n::: {.cell-output-display}\n![](../images/ims.jpeg){width=50%}\n:::\n:::\n\n:::\n\n[**Required Reading:** Incorporating Categorical Variables into Visualizations](https://openintro-ims.netlify.app/explore-categorical.html#comparing-numerical-data-across-groups)\n\n## Textbook Reading -- Part 2\n\n::: column-margin\n\n::: {.cell}\n::: {.cell-output-display}\n![](../images/modern_dive.png)\n:::\n:::\n\n:::\n\n[**Required Reading:** Incorporating Categorical Variables into Summary Statistics](https://moderndive.com/3-wrangling.html)\n\n## Concept Quiz -- Due Tuesday by noon\n\n**1. Suppose you've run the following code to make side-by-side boxplots of life expectancy:**\n\n```         \nggplot(data = health, mapping = aes(x = country, y = lifeExp)) + \n    geom_boxplot()\n```\n\n**Your resulting plot looks like this:**\n\n![](images/boxplot_with_overlapping_axis_labels.webp)\n\n**What should you do?**\n\n-   Move country to the y-axis.\n-   Remove some countries so the names don't overlap.\n-   Nothing, it looks great!\n\n**2. If you didn't want to stack your boxplots side-by-side, how else could you separate the groups?**\n\n::: callout-tip\nThis does not go inside the aes() function!\n:::\n\n**3. What functions are necessary to calculate summary statistics for different groups of a categorical variable?**\n\n-   `summarize()`\n-   `mutate()`\n-   `arrange()`\n-   `group_by()`\n-   `filter()`\n\n**4. A categorical variable could be *correctly* stored as what data types?**\n\n-   integer\n-   double\n-   character\n-   factor\n\n**5. In Lab 2, you worked with the `nycflights` dataset, which contained information on flights departing from NYC airports. If we wanted to know the average departure delay for every airline in the dataset (e.g., Delta, Allegiant, United), what steps would we need to use? Match the code to its corresponding step.**\n\n::: columns\n::: {.column width=\"40%\"}\nFirst Step\n\nSecond Step\n\nThird Step\n:::\n\n::: {.column width=\"5%\"}\n:::\n\n::: {.column width=\"55%\"}\n`nycflights`\n\n`group_by(airline)`\n\n`filter(dest == \"SFO\")`\n\n`summarize(mean_dd = mean(dep_delay))`\n:::\n:::\n\n**6. What function did you learn that is used for converting a numerical variable to a categorical variable (a process called discretizing)?**\n\n-   `mutate()`\n-   `filter()`\n-   `if_else()`\n-   `group_by()`\n\n**7. The `arrange()` function sorts or reorder a data frame's rows according to the values of the specified variable. By default, what ordering does it use for the rows?**\n\n-   ascending (smallest to largest)\n-   descending (largest to smallest)\n\n## R Tutorial -- Due Thursday by noon\n\n[**Required Tutorial:** Derive Information with dplyr](https://posit.cloud/learn/primers/2.3)\n\n::: callout-note\n# Submission\n\nSubmit a screenshot of the completion page for each tutorial to the Canvas assignment portal!\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}